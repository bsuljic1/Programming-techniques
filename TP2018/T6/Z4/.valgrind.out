==27474== Memcheck, a memory error detector
==27474== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==27474== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==27474== Command: /rhome/b/bsuljic1/workspace/TP/T6/Z4/.runme
==27474== Parent PID: 27427
==27474== 
==27474== Conditional jump or move depends on uninitialised value(s)
==27474==    at 0x1091AB: KreirajTrougao(int) (main.cpp:16)
==27474==    by 0x1094D0: main (main.cpp:51)
==27474== 
==27474== Conditional jump or move depends on uninitialised value(s)
==27474==    at 0x1091FE: KreirajTrougao(int) (main.cpp:20)
==27474==    by 0x1094D0: main (main.cpp:51)
==27474== 
==27474== Conditional jump or move depends on uninitialised value(s)
==27474==    at 0x109224: KreirajTrougao(int) (main.cpp:23)
==27474==    by 0x1094D0: main (main.cpp:51)
==27474== 
==27474== Conditional jump or move depends on uninitialised value(s)
==27474==    at 0x4C3084C: operator new[](unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==27474==    by 0x109235: KreirajTrougao(int) (main.cpp:23)
==27474==    by 0x1094D0: main (main.cpp:51)
==27474== 
==27474== Conditional jump or move depends on uninitialised value(s)
==27474==    at 0x10924A: KreirajTrougao(int) (main.cpp:23)
==27474==    by 0x1094D0: main (main.cpp:51)
==27474== 
==27474== Conditional jump or move depends on uninitialised value(s)
==27474==    at 0x10929F: KreirajTrougao(int) (main.cpp:26)
==27474==    by 0x1094D0: main (main.cpp:51)
==27474== 
==27474== Conditional jump or move depends on uninitialised value(s)
==27474==    at 0x1094E2: main (main.cpp:52)
==27474== 
==27474== 
==27474== Process terminating with default action of signal 1 (SIGHUP)
==27474==    at 0x56EF152: write (write.c:27)
==27474==    by 0x566A1BC: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1203)
==27474==    by 0x566AB2E: new_do_write (fileops.c:457)
==27474==    by 0x566AB2E: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1277)
==27474==    by 0x565E976: fwrite (iofwrite.c:39)
==27474==    by 0x51460D1: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==27474==    by 0x5152384: std::ostream& std::ostream::_M_insert<long>(long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==27474==    by 0x10952B: main (main.cpp:54)
==27474== 
==27474== HEAP SUMMARY:
==27474==     in use at exit: 4,092 bytes in 2 blocks
==27474==   total heap usage: 4 allocs, 2 frees, 77,820 bytes allocated
==27474== 
==27474== LEAK SUMMARY:
==27474==    definitely lost: 0 bytes in 0 blocks
==27474==    indirectly lost: 0 bytes in 0 blocks
==27474==      possibly lost: 0 bytes in 0 blocks
==27474==    still reachable: 4,092 bytes in 2 blocks
==27474==         suppressed: 0 bytes in 0 blocks
==27474== Reachable blocks (those to which a pointer was found) are not shown.
==27474== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27474== 
==27474== For counts of detected and suppressed errors, rerun with: -v
==27474== Use --track-origins=yes to see where uninitialised values come from
==27474== ERROR SUMMARY: 100 errors from 7 contexts (suppressed: 0 from 0)
